<launch>
    <!-- Define paths for URDF and RViz configuration -->
    <arg name="urdf_path" default="$(find-pkg-share my_robot_description)/urdf/my_robot.urdf.xacro" />
    <arg name="rviz_config_path" default="$(find-pkg-share my_robot_bringup)/rviz/urdf_config.rviz" />

    <!-- Launch the robot_state_publisher node -->
    <node pkg="robot_state_publisher" exec="robot_state_publisher" output="screen">
        <param name="robot_description" value="$(command 'xacro $(var urdf_path)')" />
    </node>

    <!-- Launch Gazebo with the specified world -->
    <include file="$(find-pkg-share gazebo_ros)/launch/gazebo.launch.py">
        <arg name="world" value="$(find-pkg-share my_robot_bringup)/worlds/vessel_sim.world" />
    </include>

    <!-- Spawn the robot entity in Gazebo with a specific orientation -->
    <node pkg="gazebo_ros" exec="spawn_entity.py"
          name="spawn_entity"
          output="screen"
          args="-topic /robot_description -entity my_robot -x 0 -y 0 -z 2 -R -1.57 -P 0 -Y 0">
        <remap from="/robot_description" to="/robot_description"/>
    </node>

    <!-- Launch RViz with the specified configuration -->
    <node pkg="rviz2" exec="rviz2" output="screen" 
          args="-d $(var rviz_config_path)" />

    <!-- Launch the force_applier node -->
    <node pkg="my_robot_simulation" exec="force_applier" output="screen">
        <!-- Add any parameters or remappings for your force_applier node here -->
    </node>

    <!-- Launch the joint_state_publisher_gui node -->
    <node pkg="joint_state_publisher_gui" exec="joint_state_publisher_gui" output="screen">
        <param name="robot_description" value="$(command 'xacro $(var urdf_path)')" />
    </node>
</launch>
