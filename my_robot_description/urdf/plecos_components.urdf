<?xml version="1.0"?>
<robot name="goby_components" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:macro name="box_inertia" params="m w h l">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + w*w)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (h*h + l*l)}" iyz="0.0" izz="${(m/12) * (w*w + l*l)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="wheel" params="prefix parent_link wheel_xoff:=0 reflect_y:=1">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi / 2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="red"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi / 2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="${parent_link}"/>
      <child link="${prefix}_link"/>
      <origin xyz="${wheel_xoff} ${wheel_yoff * reflect_y} ${wheel_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>

    <gazebo reference="${prefix}_link">
      <mu1 value="100.62" />
      <mu2 value="100.2" />
      <kp value="10000000.0" />
      <kd value="1.0" />
      <fdir1 value="0 1 0" />
    </gazebo>

  </xacro:macro>

  <xacro:macro name="imu_sensor" params="prefix parent_link imu_pitch:=0 imu_yaw:=0 imu_x:=0 imu_y:=0 imu_z:=0">
    <link name="${prefix}_link">
      <visual>
        <material name="green"/>
        <geometry>
          <box size="${imu_width} ${imu_length} ${imu_height}"/>
        </geometry>
      </visual>
      <collision>
        <geometry>
          <box size="${imu_width} ${imu_length} ${imu_height}"/>
        </geometry>
      </collision>
      <xacro:box_inertia m="${imu_mass}" w="${imu_width}" l="${imu_length}" h="${imu_height}"/>
    </link>

    <joint name="${prefix}_joint" type="fixed">
      <parent link="${parent_link}"/>
      <child link="${prefix}_link"/>
      <origin xyz="${imu_x} ${imu_y} ${imu_z}" rpy="0 ${imu_pitch} ${imu_yaw}"/>
    </joint>

    <gazebo reference="${prefix}_link">
      <gravity>true</gravity>
      <sensor name="${prefix}_sensor" type="imu">
        <plugin filename="libgazebo_ros_imu_sensor.so" name="${prefix}_plugin">
          <ros>
            <remapping>~/out:=sim/imu</remapping>
          </ros>
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
        </plugin>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7453293e-5</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>0.0</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7453293e-5</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>0.0</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7453293e-5</stddev>
                <bias_mean>0.0</bias_mean>
                <bias_stddev>0.0</bias_stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
      </sensor>
    </gazebo>
  </xacro:macro>





</robot>
